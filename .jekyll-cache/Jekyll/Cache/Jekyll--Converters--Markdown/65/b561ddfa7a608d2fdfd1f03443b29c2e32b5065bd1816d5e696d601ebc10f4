I"F<h2 id="effective-java-item-7-avoid-finalizer">Effective Java Item 7: Avoid finalizer</h2>

<ul>
  <li>
    <p>Finalizers are unpredictabile, often dangerous, and unnecessary.</p>
  </li>
  <li>
    <p>Never do anything time-critical in finalizers.</p>
  </li>
  <li>
    <p>Servere performance penalty for using finalizer, for example, time to create and destroy simple object goes from 5.6ns to 2400ns.</p>
  </li>
  <li>
    <p>Should not depend on finalizers to upgrade important persistence state.</p>
  </li>
  <li>
    <p>Provide specific termination method instead of writing code in finalizers.</p>
  </li>
  <li>
    <p>Finalizers should log if the resource has not been terminated.</p>
  </li>
  <li>
    <p>Anything throws exceptions in finalizers will be ingnored.</p>
  </li>
  <li>
    <p>It’s better to take Advantages of Android lifecycler instead of using finalizers.</p>
  </li>
  <li>
    <p>Use finalizers as a safety net or to terminate noncritical native resources.</p>
  </li>
</ul>

<p>For instance…</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span> <span class="o">{</span>
   <span class="c1">// get data from cursor</span>
<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
   <span class="c1">// exception handling</span>
<span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
  <span class="n">db</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div></div>

<p>I didn’t have many chances to use finalizers, but as you can see, normally, we do not need it. The only one experience is that I write code about database transactions. Next time I see finalizers, I will have to check it very carefully.</p>

<p>This series of articles are notes when I am reading a book, called Effective Java (2nd version). If you are interested, you should definitely check it out.</p>
:ET